{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IBSCV",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "contract IController",
						"name": "_controller",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_countdown",
						"type": "uint32"
					},
					{
						"internalType": "uint256",
						"name": "_restTime",
						"type": "uint256"
					},
					{
						"internalType": "contract IBANK",
						"name": "_bank",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "userID",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "choice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "betPlaced",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					}
				],
				"name": "roundCreated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BSCV",
				"outputs": [
					{
						"internalType": "contract IBSCV",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "Bank",
				"outputs": [
					{
						"internalType": "contract IBANK",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "Controller",
				"outputs": [
					{
						"internalType": "contract IController",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "Countdown",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "Tax",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_userId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amounts",
						"type": "uint256"
					}
				],
				"name": "addRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_userId",
						"type": "uint32"
					}
				],
				"name": "approveUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_choice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "bet",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "_userID",
						"type": "uint32"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "result",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_userId",
						"type": "uint32"
					},
					{
						"internalType": "uint256",
						"name": "_choice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_betAmount",
						"type": "uint256"
					}
				],
				"name": "betManager",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "collectRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "createRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentInfo",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getPendingRewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					}
				],
				"name": "getRoundInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "start",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "end",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "bettingAddressesOnOne",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "bettingAmountsOnOne",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "bettingAddressesOnTwo",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "bettingAmountsOnTwo",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "bettingAddressesOnThree",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "bettingAmountsOnThree",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "winningChoice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalPrize",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_id",
						"type": "uint32"
					}
				],
				"name": "getUserAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "getUserId",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_userId",
						"type": "uint32"
					}
				],
				"name": "getUserInfo",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "UserID",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "Level",
						"type": "uint32"
					},
					{
						"internalType": "uint256",
						"name": "PendingRewards",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "CollectedRewards",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "LockTill",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "BetCounts",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "Approve",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "restTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IBSCV",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "setBSCV",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IBANK",
						"name": "_bank",
						"type": "address"
					}
				],
				"name": "setBank",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IController",
						"name": "_controller",
						"type": "address"
					}
				],
				"name": "setController",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_countdown",
						"type": "uint32"
					}
				],
				"name": "setCountdown",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rest",
						"type": "uint256"
					}
				],
				"name": "setRestTime",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_choice",
						"type": "uint256"
					}
				],
				"name": "setWinningChoice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalRounds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalUsers",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_userId",
						"type": "uint32"
					}
				],
				"name": "unapproveUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"bet(uint256,uint256)": {
					"details": "used to bet in the current round The user is registered if he/she is a new user and assigned a new userId"
				},
				"betManager(uint32,uint256,uint256)": {
					"details": "used to bet without any automated checking"
				},
				"collectRewards()": {
					"details": "collect rewards you've won accessed only by approvedUsers"
				},
				"createRound()": {
					"details": "Creates round controlled by owner"
				},
				"currentInfo()": {
					"details": "returns number of placed bet in the round"
				},
				"getPendingRewards(address)": {
					"details": "returns pending Rewards of a user"
				},
				"getRoundInfo(uint256)": {
					"details": "returns the roundinfo based on roundId"
				},
				"getUserId(address)": {
					"details": "returns a userid registered to the address"
				},
				"getUserInfo(uint32)": {
					"details": "returns user struct of registered userInfo"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"totalUsers()": {
					"details": "return totalUsers "
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Client.sol": "Client"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163",
				"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14",
				"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"contracts/Client.sol": {
			"keccak256": "0x4c422fc7880aa3619fefcab69c3ede1e2e9cd35573e7664cfaaf71f5365f5974",
			"license": "MIT",
			"urls": [
				"bzz-raw://0693d168ca0034df2bfdeffaf75039f305c645e24e302e5880f9201ec5dad4a9",
				"dweb:/ipfs/QmRfawvkwoevPTcC9NRk47an5sgtrtnzWVZu2D3Ky4jtx8"
			]
		},
		"contracts/interfaces/IBANK.sol": {
			"keccak256": "0xaf4c6688dcd7b92b0f5e428e117cc1bccff99961ae1efc7e27470c64aba3edf4",
			"urls": [
				"bzz-raw://9b0d10532e373e9125a53e81bea645c3c4c8d65850f0facea638b78b351793b8",
				"dweb:/ipfs/Qmbv9YhXJiBgADkNxNkXB43TCta3CWiQeJ2K98vnnD6Fsq"
			]
		},
		"contracts/interfaces/IBSCV.sol": {
			"keccak256": "0x54cc9e778257df5e76f595a5de18569fd6786a85ac82a12f3128f7e77e52d099",
			"license": "MIT",
			"urls": [
				"bzz-raw://a3ed272c0a181aec22386bd736bee9d2a51373d85c398aaf1be54c9812c16ec8",
				"dweb:/ipfs/Qmd8aq8xKHfHMja76E9ohfEQdsonphmZisRGqgwr87ARmJ"
			]
		},
		"contracts/interfaces/IClient.sol": {
			"keccak256": "0xf05ba4cb512d955e343102f18e57b5fe49d246dd0846eb6cf64b013014b9268d",
			"license": "MIT",
			"urls": [
				"bzz-raw://d83e0a881d9c8bfe7e22309a839edb5484f718fd3ab75ecf898867505ff31ed1",
				"dweb:/ipfs/QmfXAmmfTzvJBN5FM52SAnvmDt2XYkPU8T7G9yZUCAYQ37"
			]
		},
		"contracts/interfaces/IController.sol": {
			"keccak256": "0xf5f3177d406a1a063942418648d78cd9df1a3b3b4930e56157e035401121a2c8",
			"license": "MIT",
			"urls": [
				"bzz-raw://2c63b1e93036bbf183baed2894edee33bafb0129447298271f33bc3f5f58c770",
				"dweb:/ipfs/QmdqWwjnrD2GLHLbNb1qJqDMmz2He4tfdS9TcnrmkN9oZA"
			]
		}
	},
	"version": 1
}