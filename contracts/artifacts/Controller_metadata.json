{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					},
					{
						"internalType": "contract IClient",
						"name": "_client",
						"type": "address"
					},
					{
						"internalType": "contract IBSCV",
						"name": "_bscv",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousGuard",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newGuard",
						"type": "address"
					}
				],
				"name": "GuardshipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_choice",
						"type": "uint256"
					}
				],
				"name": "finishedRound",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BSCV",
				"outputs": [
					{
						"internalType": "contract IBSCV",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "Client",
				"outputs": [
					{
						"internalType": "contract IClient",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "Round",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_approved",
						"type": "bool"
					}
				],
				"name": "changeUserStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "createRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dailyRewardInterval",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dailyRewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "distributeDailyReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_level",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_condition",
						"type": "uint256"
					}
				],
				"name": "editLevel",
				"outputs": [
					{
						"internalType": "string",
						"name": "message",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_choice",
						"type": "uint256"
					}
				],
				"name": "finishRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentRoundId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "guard",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_level",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_betCounts",
						"type": "uint256"
					}
				],
				"name": "levelRequirements",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_result",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nextdailyRewardAt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "operator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceGuardship",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IBSCV",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "setBSCV",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IClient",
						"name": "_client",
						"type": "address"
					}
				],
				"name": "setClient",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_countDown",
						"type": "uint32"
					}
				],
				"name": "setCountDown",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					}
				],
				"name": "setOperator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newGuard",
						"type": "address"
					}
				],
				"name": "transferGuardship",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_withdraw",
						"type": "address"
					}
				],
				"name": "withdrawRevenue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"editLevel(uint256,uint256)": {
					"details": "edit the level conditions ",
					"params": {
						"_condition": "enter the condition to be changed Use this function wisely as this would messup the levels of the users and other level requirements",
						"_level": "choose a level to edit its condition"
					}
				},
				"finishRound(uint256)": {
					"details": "finishtheRound based on random choice called via operator"
				},
				"getCurrentRoundId()": {
					"details": "returns the current roundId"
				},
				"guard()": {
					"details": "Returns the address of the current owner."
				},
				"levelRequirements(uint256,uint256)": {
					"details": "returns true when the levelrequirements met by the user.Used by levelManager"
				},
				"renounceGuardship()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setBSCV(address)": {
					"details": "Change ERC20"
				},
				"setClient(address)": {
					"details": "Change to newClient"
				},
				"setOperator(address)": {
					"details": "Change operator"
				},
				"transferGuardship(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Controller.sol": "Controller"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14",
				"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"@openzeppelin/contracts/utils/Counters.sol": {
			"keccak256": "0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd",
			"license": "MIT",
			"urls": [
				"bzz-raw://f103065051300cd995fd4599ba91188d4071b92175b52f26110e02db091617c0",
				"dweb:/ipfs/QmSyDz67R2HCypDE8Pacn3voVwxw9x17NM66q47YgBnGqc"
			]
		},
		"contracts/Controller.sol": {
			"keccak256": "0xed79ff16bb42039e5423973b90db7218adb017ac6e7dcaa9851f07eaead8cf07",
			"license": "MIT",
			"urls": [
				"bzz-raw://f344d3010377ce6ca4e4029efc491c3b9085a71bd382be88a37cb5f56ed1fee1",
				"dweb:/ipfs/Qmbg5LyD2wfVCaaKSHSzRJG8qhhQF8H27AU85Bfsy5DSim"
			]
		},
		"contracts/interfaces/IBSCV.sol": {
			"keccak256": "0x54cc9e778257df5e76f595a5de18569fd6786a85ac82a12f3128f7e77e52d099",
			"license": "MIT",
			"urls": [
				"bzz-raw://a3ed272c0a181aec22386bd736bee9d2a51373d85c398aaf1be54c9812c16ec8",
				"dweb:/ipfs/Qmd8aq8xKHfHMja76E9ohfEQdsonphmZisRGqgwr87ARmJ"
			]
		},
		"contracts/interfaces/IClient.sol": {
			"keccak256": "0xf05ba4cb512d955e343102f18e57b5fe49d246dd0846eb6cf64b013014b9268d",
			"license": "MIT",
			"urls": [
				"bzz-raw://d83e0a881d9c8bfe7e22309a839edb5484f718fd3ab75ecf898867505ff31ed1",
				"dweb:/ipfs/QmfXAmmfTzvJBN5FM52SAnvmDt2XYkPU8T7G9yZUCAYQ37"
			]
		},
		"contracts/interfaces/IController.sol": {
			"keccak256": "0xf5f3177d406a1a063942418648d78cd9df1a3b3b4930e56157e035401121a2c8",
			"license": "MIT",
			"urls": [
				"bzz-raw://2c63b1e93036bbf183baed2894edee33bafb0129447298271f33bc3f5f58c770",
				"dweb:/ipfs/QmdqWwjnrD2GLHLbNb1qJqDMmz2He4tfdS9TcnrmkN9oZA"
			]
		},
		"contracts/lib/Guarded.sol": {
			"keccak256": "0x37f1233365dcc7962ccb227fa87ba00a25e432dd976dce3c43520bffc84bb983",
			"license": "MIT",
			"urls": [
				"bzz-raw://7e08556f654f71e8d5894679b94f8fbded775d7bfdc0250bc5d63b26c8014031",
				"dweb:/ipfs/QmVaknU4dEpbDtL5EX2btYtqwtBMogD8SH16D9WpHDdL5a"
			]
		}
	},
	"version": 1
}